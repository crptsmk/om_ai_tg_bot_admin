#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–æ—Ç–∞ - –ø—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
"""

import asyncio
import logging
from config import Config
from messages import BotMessages

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

async def test_bot_setup():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –±–æ—Ç–∞"""
    logger.info("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –±–æ—Ç–∞...")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞
    if Config.TELEGRAM_BOT_TOKEN:
        logger.info("‚úÖ –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –Ω–∞–π–¥–µ–Ω")
        logger.info(f"üîë –¢–æ–∫–µ–Ω –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å: {Config.TELEGRAM_BOT_TOKEN[:10]}...")
    else:
        logger.error("‚ùå –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return False
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ç–∞–∫—Ç–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    if Config.ADMIN_CONTACT:
        logger.info(f"üë®‚Äçüíº –ö–æ–Ω—Ç–∞–∫—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: @{Config.ADMIN_CONTACT}")
    else:
        logger.error("‚ùå –ö–æ–Ω—Ç–∞–∫—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return False
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤
    logger.info(f"üîç –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –¥–ª—è –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è: {len(Config.JOIN_KEYWORDS)} —à—Ç.")
    logger.info(f"üéØ –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è: {len(Config.ENGAGEMENT_KEYWORDS)} —à—Ç.")
    
    return True

def test_messages():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π"""
    logger.info("üìù –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π...")
    
    # –¢–µ—Å—Ç —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    main_msg = BotMessages.format_message(BotMessages.MAIN_INFO_MESSAGE, "testuser")
    if "testuser" in main_msg:
        logger.info("‚úÖ –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç")
    else:
        logger.error("‚ùå –û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è")
        return False
    
    # –¢–µ—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è
    engagement_msg = BotMessages.format_message(BotMessages.ENGAGEMENT_MESSAGE, "testuser")
    if "testuser" in engagement_msg:
        logger.info("‚úÖ –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç")
    else:
        logger.error("‚ùå –û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è")
        return False
    
    logger.info("üìè –î–ª–∏–Ω–∞ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {} —Å–∏–º–≤–æ–ª–æ–≤".format(len(main_msg)))
    logger.info("üìè –î–ª–∏–Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è: {} —Å–∏–º–≤–æ–ª–æ–≤".format(len(engagement_msg)))
    
    return True

def test_keywords():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤"""
    logger.info("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤...")
    
    test_messages = [
        "–ö–∞–∫ –≤—Å—Ç—É–ø–∏—Ç—å –≤ –≥—Ä—É–ø–ø—É?",
        "–•–æ—á—É –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø",
        "–°–∫–æ–ª—å–∫–æ —Å—Ç–æ–∏—Ç –ø–æ–¥–ø–∏—Å–∫–∞?",
        "–ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ, —Ä–∞—Å—Å–∫–∞–∂–∏ –ø–æ–¥—Ä–æ–±–Ω–µ–µ",
        "–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç?",
        "VEO 3 –∫—Ä—É—Ç–æ!"
    ]
    
    for msg in test_messages:
        msg_lower = msg.lower()
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤ –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è
        join_match = any(keyword in msg_lower for keyword in Config.JOIN_KEYWORDS)
        engagement_match = any(keyword in msg_lower for keyword in Config.ENGAGEMENT_KEYWORDS)
        
        if join_match:
            logger.info(f"‚úÖ '{msg}' ‚Üí JOIN —Å–æ–æ–±—â–µ–Ω–∏–µ")
        elif engagement_match:
            logger.info(f"‚úÖ '{msg}' ‚Üí ENGAGEMENT —Å–æ–æ–±—â–µ–Ω–∏–µ")
        else:
            logger.info(f"‚ÑπÔ∏è '{msg}' ‚Üí –ù–µ—Ç —Ä–µ–∞–∫—Ü–∏–∏")
    
    return True

async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Buddah Base –±–æ—Ç–∞")
    
    # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫
    if not await test_bot_setup():
        logger.error("üí• –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø—Ä–æ–≤–∞–ª–µ–Ω–æ!")
        return
    
    # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π
    if not test_messages():
        logger.error("üí• –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π –ø—Ä–æ–≤–∞–ª–µ–Ω–æ!")
        return
    
    # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤
    if not test_keywords():
        logger.error("üí• –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤ –ø—Ä–æ–≤–∞–ª–µ–Ω–æ!")
        return
    
    logger.info("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
    logger.info("üöÄ –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ –∑–∞–ø—É—Å–∫—É!")

if __name__ == "__main__":
    asyncio.run(main())