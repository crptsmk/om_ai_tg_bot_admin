#!/usr/bin/env python3
"""
Telegram –±–æ—Ç –¥–ª—è –≥—Ä—É–ø–ø—ã Buddah Base
–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –æ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–∏ –∏ –ø—Ä–∏–≤–ª–µ–∫–∞–µ—Ç –Ω–æ–≤—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
"""

import logging
import asyncio
from telegram import Update
from telegram.ext import (
    Application, 
    CommandHandler, 
    MessageHandler, 
    filters,
    ContextTypes
)

from config import Config
from handlers import BotHandlers

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO,
    handlers=[
        logging.FileHandler('bot.log'),
        logging.StreamHandler()
    ]
)
logger = logging.getLogger(__name__)

class BuddahBaseBot:
    def __init__(self):
        self.application = None
        
    async def initialize(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞"""
        if not Config.TELEGRAM_BOT_TOKEN:
            raise ValueError("TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        self.application = Application.builder().token(Config.TELEGRAM_BOT_TOKEN).build()
        
        # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
        self.application.add_handler(CommandHandler("start", BotHandlers.start_command))
        self.application.add_handler(CommandHandler("help", BotHandlers.help_command))
        self.application.add_handler(CommandHandler("info", BotHandlers.info_command))
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–æ–≤—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
        self.application.add_handler(
            MessageHandler(filters.StatusUpdate.NEW_CHAT_MEMBERS, BotHandlers.handle_new_member)
        )
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–±—ã—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (—Ç–æ–ª—å–∫–æ –≤ –≥—Ä—É–ø–ø–∞—Ö)
        self.application.add_handler(
            MessageHandler(
                filters.TEXT & filters.ChatType.GROUPS & ~filters.COMMAND, 
                BotHandlers.handle_message
            )
        )
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
        self.application.add_error_handler(BotHandlers.error_handler)
        
        logger.info("–ë–æ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
    
    async def start(self):
        """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
        await self.initialize()
        
        logger.info("üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º Buddah Base –±–æ—Ç–∞...")
        logger.info(f"üì± Admin contact: @{Config.ADMIN_CONTACT}")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
        await self.application.initialize()
        await self.application.start()
        await self.application.updater.start_polling(drop_pending_updates=True)
        
        logger.info("‚úÖ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
        
        # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
        await self.application.updater.idle()
    
    async def stop(self):
        """–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞"""
        if self.application:
            await self.application.updater.stop()
            await self.application.stop()
            await self.application.shutdown()
        logger.info("üõë –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    bot = BuddahBaseBot()
    
    try:
        await bot.start()
    except KeyboardInterrupt:
        logger.info("üëã –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏...")
    except Exception as e:
        logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
    finally:
        await bot.stop()

if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        logger.info("üëã –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {e}")