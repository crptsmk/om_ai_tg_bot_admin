#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤ –¥–ª—è –∑–∞–ø—Ä–æ—Å–æ–≤ —Ñ–∞–π–ª–æ–≤
"""

import asyncio
from config import Config
from handlers import BotHandlers
from messages import BotMessages
from unittest.mock import Mock, AsyncMock

class FileKeywordsTest:
    
    def test_keywords_detection(self):
        """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤ —Ñ–∞–π–ª–æ–≤"""
        print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤...")
        print("=" * 50)
        
        # –¢–µ—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —Ñ–∞–π–ª–æ–≤
        files_test_cases = [
            "–¥–∞–π—Ç–µ —Ñ–∞–π–ª–∏–∫ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞",
            "—Å–∫–∏–Ω—å—Ç–µ student id",
            "–µ—Å—Ç—å —Ñ–∞–π–ª —Å –ø—Ä–æ–º–ø—Ç–∞–º–∏?", 
            "–ø–æ–¥–µ–ª–∏—Ç–µ—Å—å –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º–∏",
            "–≥–¥–µ —Å–∫–∞—á–∞—Ç—å –±–∞–∑—É?",
            "–º–æ–∂–Ω–æ —Ñ–∞–π–ª —Å —à–∞–±–ª–æ–Ω–∞–º–∏",
            "—Ö–æ—á—É —Ñ–∞–π–ª—ã –∏ –≥–∞–π–¥—ã"
        ]
        
        # –¢–µ—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è
        join_test_cases = [
            "–∫–∞–∫ –≤—Å—Ç—É–ø–∏—Ç—å –≤ –≥—Ä—É–ø–ø—É",
            "–Ω—É–∂–µ–Ω –¥–æ—Å—Ç—É–ø –∫ –∫–∞–Ω–∞–ª—É",
            "—Å–∫–æ–ª—å–∫–æ —Å—Ç–æ–∏—Ç –ø–æ–¥–ø–∏—Å–∫–∞"
        ]
        
        # –¢–µ—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è
        engagement_test_cases = [
            "–∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ —Ä–∞—Å—Å–∫–∞–∂–∏",
            "veo –∫—Ä—É—Ç–æ",
            "–∫–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç"
        ]
        
        print("üìÅ –§–ê–ô–õ–´ –ò –ú–ê–¢–ï–†–ò–ê–õ–´:")
        for msg in files_test_cases:
            msg_lower = msg.lower()
            has_files = any(keyword in msg_lower for keyword in Config.FILES_KEYWORDS)
            has_join = any(keyword in msg_lower for keyword in Config.JOIN_KEYWORDS)
            has_engagement = any(keyword in msg_lower for keyword in Config.ENGAGEMENT_KEYWORDS)
            
            if has_files:
                print(f"‚úÖ '{msg}' ‚Üí –§–ê–ô–õ–´")
            elif has_join:
                print(f"üîÑ '{msg}' ‚Üí –í–°–¢–£–ü–õ–ï–ù–ò–ï")
            elif has_engagement:
                print(f"üí¨ '{msg}' ‚Üí –í–ó–ê–ò–ú–û–î–ï–ô–°–¢–í–ò–ï")
            else:
                print(f"‚ùå '{msg}' ‚Üí –ù–ï–¢ –†–ï–ê–ö–¶–ò–ò")
        
        print(f"\nüíé –í–°–¢–£–ü–õ–ï–ù–ò–ï:")
        for msg in join_test_cases:
            msg_lower = msg.lower()
            has_files = any(keyword in msg_lower for keyword in Config.FILES_KEYWORDS)
            has_join = any(keyword in msg_lower for keyword in Config.JOIN_KEYWORDS)
            has_engagement = any(keyword in msg_lower for keyword in Config.ENGAGEMENT_KEYWORDS)
            
            if has_files:
                print(f"üîÑ '{msg}' ‚Üí –§–ê–ô–õ–´")
            elif has_join:
                print(f"‚úÖ '{msg}' ‚Üí –í–°–¢–£–ü–õ–ï–ù–ò–ï")
            elif has_engagement:
                print(f"üí¨ '{msg}' ‚Üí –í–ó–ê–ò–ú–û–î–ï–ô–°–¢–í–ò–ï")
            else:
                print(f"‚ùå '{msg}' ‚Üí –ù–ï–¢ –†–ï–ê–ö–¶–ò–ò")
        
        print(f"\nüî• –í–ó–ê–ò–ú–û–î–ï–ô–°–¢–í–ò–ï:")
        for msg in engagement_test_cases:
            msg_lower = msg.lower()
            has_files = any(keyword in msg_lower for keyword in Config.FILES_KEYWORDS)
            has_join = any(keyword in msg_lower for keyword in Config.JOIN_KEYWORDS)
            has_engagement = any(keyword in msg_lower for keyword in Config.ENGAGEMENT_KEYWORDS)
            
            if has_files:
                print(f"üîÑ '{msg}' ‚Üí –§–ê–ô–õ–´")
            elif has_join:
                print(f"üíé '{msg}' ‚Üí –í–°–¢–£–ü–õ–ï–ù–ò–ï")
            elif has_engagement:
                print(f"‚úÖ '{msg}' ‚Üí –í–ó–ê–ò–ú–û–î–ï–ô–°–¢–í–ò–ï")
            else:
                print(f"‚ùå '{msg}' ‚Üí –ù–ï–¢ –†–ï–ê–ö–¶–ò–ò")
        
        print(f"\nüìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
        print(f"üìÅ –ö–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤ –¥–ª—è —Ñ–∞–π–ª–æ–≤: {len(Config.FILES_KEYWORDS)}")
        print(f"üíé –ö–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤ –¥–ª—è –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è: {len(Config.JOIN_KEYWORDS)}")
        print(f"üî• –ö–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤ –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è: {len(Config.ENGAGEMENT_KEYWORDS)}")
        
        print(f"\nüìù –ö–õ–Æ–ß–ï–í–´–ï –°–õ–û–í–ê –î–õ–Ø –§–ê–ô–õ–û–í:")
        for i, keyword in enumerate(Config.FILES_KEYWORDS, 1):
            print(f"   {i:2d}. {keyword}")

    def test_message_formatting(self):
        """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è"""
        print(f"\nüìã –ù–û–í–û–ï –°–û–û–ë–©–ï–ù–ò–ï –î–õ–Ø –§–ê–ô–õ–û–í:")
        print("=" * 50)
        
        files_message = BotMessages.format_message(
            BotMessages.FILES_REQUEST_MESSAGE, 
            Config.ADMIN_CONTACT
        )
        
        print(files_message)
        print(f"\nüìè –î–ª–∏–Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è: {len(files_message)} —Å–∏–º–≤–æ–ª–æ–≤")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Å—ã–ª–∫–∏
        if f"t.me/{Config.ADMIN_CONTACT}" in files_message:
            print("‚úÖ –°—Å—ã–ª–∫–∞ –Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –≤ —Å—Å—ã–ª–∫–µ –Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")

if __name__ == "__main__":
    tester = FileKeywordsTest()
    tester.test_keywords_detection()
    tester.test_message_formatting()
    
    print(f"\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print(f"üöÄ –ë–æ—Ç —Ç–µ–ø–µ—Ä—å —É–º–µ–µ—Ç:")
    print(f"   üìÅ –û–ø—Ä–µ–¥–µ–ª—è—Ç—å –∑–∞–ø—Ä–æ—Å—ã —Ñ–∞–π–ª–æ–≤ –∏ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤")
    print(f"   üíé –†–∞–∑–ª–∏—á–∞—Ç—å —Ç–∏–ø—ã –∑–∞–ø—Ä–æ—Å–æ–≤ (—Ñ–∞–π–ª—ã/–≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ/–≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ)")
    print(f"   üéØ –û—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã")
    print(f"   üîó –ù–∞–ø—Ä–∞–≤–ª—è—Ç—å –∫ @{Config.ADMIN_CONTACT} —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º CTA")